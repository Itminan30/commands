**Docker Desktop & Docker Engine are different and if both run at the same time it will create complications. See official Doc to learn more**

1. Install Docker with DEB Packages(Will Show some error after installation - Ignore it):
	sudo apt-get install ./docker-desktop-amd64.deb

2. Check Version of Docker Desktop:
	docker compose version
	docker --version
	docker version

3. Enable Docker Desktop on signin:
	systemctl--user enable docker-desktop

4. Disable Docker Desktop on signin:
	systemctl disable docker-desktop **or**
	systemctl diable docker.service docker.socket

5. Check Docker Desktop Status:
	systemctl status docker-desktop

6. Launch Docker Desktop using CLI:
	systemctl --user start docker-desktop

7. Stop Docker Desktop:
	systemctl --user stop docker-desktop

8. See available Docker Images:
	docker images

9. Pull Docker Images:
	docker pull image-name

10. Run Docker Image (create container from docker image) (If the image is not availabe then this command pulls the image first then run it):
	docker run image-name

11. See all availabe containers:
	docker ps -a
	docker ps (see the running containers)

12. Restart existing docker container:
	docker start container-name or docker start container-id

13. Stop a running Docker container:
	docker stop container-name or docker stop container-id
	
13. Remove docker image:
	docker rmi image-name

14. Remove Docker Container:
	docker rm container-name
	
15. Name a Container:
	docker run --name container-name image-name

16. Port Binding:
	docker run -phost-port:container-port image-name

17 Environment Variable:
	docker run -e ENVIRONMENT_NAME=ENVIRONMENT_VALUE image-name

18. Check logs of a container:
	docker logs container-id

19. Access the terminal of a running container:
	docker exec -it container-id /bin/bash
	docker exec -it container-id /bin/sh (In case the container terminal doesn't have bash)

20. Run Container in detached mode:
	docker run -d image-name

21. Check all the docker networks:
	docker network ls

22. Create a docker network:
	docker network create network-name

23. Delete a docker network:
	docker network rm network-name

23. Run an image in a docker network:
	docker run -d \
	-p<hostport>:<containerport> \ 
	--name container_name \
	--network network_name \
	-e env_name=env_value
	image_name

24. Up a docker compose file:
	docker compose -f fileName.yaml up -d

25. Down (Delete the containers) a docker compose file:
	docker compose -f fileName.yaml down

26. Learn about dockerizing our application***

27. Docker Volumes:
	docker run -it -v host_path:cont_path image_name
Here	host_path = Path of the host where we want to save the data
	cont_path = Path of the imaginary file system of container where the data will be saved
